<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "splunk_glance-doc.ent">
%BOOK_ENTITIES;
]>
<article>
  <xi:include href="Article_Info.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />

  <section id="s1-overview">
    <title>Overview</title>
    <para>
      I would like to describe the integration between Glance(<ulink
      url="http://glance.openstack.org/"/>) and Splunk (<ulink
      url="http://www.splunk.com/"/>)
    </para>
    <itemizedlist>
      <listitem>
	<para>
	  <guilabel>Glance</guilabel> provides services used by OpenStack
          project for discovering, registering, and retrieving virtual machine images. It
          has it's API, which can be used by programming languages and also CLI.
        </para>
      </listitem>
      <listitem>
	<para>
	  <guilabel>Splunk</guilabel> is a software used for collecting, indexing from various sources
          which can be analysed. Splunk has web-gui through which you can easily display
          graphs, statistics of collected data.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      The goal of this document is to show possibilities how the logs generated
      by Glance can be transferred and indexed by Splunk. The suggested solution is
      just a simple example how to do it. It doesn't conatin any kind of redundancy
      (except bonding configuration). Fully redundant solution will probably include
      forwarders, <package>keepalived</package> and more advanced stuff - but this is
      not a goal of this project.  You can find the necessary files and sources in
      the repository: <ulink url="https://github.com/ruzickap/splunk_glance"/>.
    </para>
  </section>

  <section id="s1-reference-architecture-configuration">
    <title>Reference Architecture Configuration</title>
      <para>
	For the simulations I decided to use free software as much as possible
        and visualised hardware. It's not a priority right now to describe in details
        which hardware is needed for real production, because this is suggestions how
        the things can work. It's the same with software â€“ for production server it's
        better to buy supported OS from known vendors, but it depends how big the final
        solution.
      </para>
    <section id="s3-software_configuration">
      <title>Software Configuration</title>
      <section id="s2-operating_systems">
        <title>Operating Systems</title>
	<para>
	  I choose CentOS (<ulink url="http://www.centos.org"/>) as the
          operating system for the whole solution. It's 64-bit version OS based on Red
          Hat Enterprise Linux. The advantage of this choice is - CentOS is binary
          compatible with RHEL. If it will be necessary to move the applications to the
          RHEL it can be done quite easily.
        </para>
      </section>

      <section id="s4-applications_tools_and_packages">
        <title>Applications, Tools and Packages</title>
	<para>
          Here is a short list of used applications and their versions.  There should be
          mentioned much more, but it's not necessary to list all the installed packages
          and their versions.
        </para>
        <table id="software_versions" frame='all'>
          <title>Software versions</title>
          <tgroup cols='2' align='center' colsep='1' rowsep='1'>
            <thead>
                <row>
                  <entry>Software</entry>
                  <entry>Version</entry>
                </row>
            </thead>
            <tbody>
                <row>
                  <entry>Splunk</entry>
                  <entry><systemitem> 4.3.1-119532 </systemitem></entry>
                </row>
                <row>
                  <entry>Glance</entry>
                  <entry><systemitem>2011.3.1-3.el6</systemitem></entry>
                </row>
                <row>
                  <entry>rsyslog</entry>
                  <entry><systemitem>4.6.2-12.el6</systemitem></entry>
                </row>
            </tbody>
          </tgroup>
        </table>
      </section>
    </section>

    <section id="s3-hardware_configuration">
      <title>Hardware Configuration</title>
	<para>There only hardware I used was my laptop with virtualization.
          This was sufficient for the basics tests.
        </para>
    </section>
  </section>
  <section id="s1-environment">
    <title>Environment</title>
    <para>As I mentioned before, the project should describe the
      possibilities of logging glance logs to the splunk. For this purpose I
      used 2 virtual machines, where Fedora 16 (<ulink
      url="http://www.fedora.org"/>) was the host and CentOS 6.2 were two
      guests.
    </para>
    <section id="s2-virtual_host_configuration">
      <title>Virtual Host Configuration</title>
      <para>
	I was using KVM virtualization which is the default in most of the
        Linux distribution, because the <application>kvm</application> module is part
        of the kernel. I used the default <application>libvirt</application>
        network configuration, because there is no reason to split the virtual
        network - so both virtual guests are connected <systemitem
        class="ipaddress">192.168.122.0/24</systemitem>.
      </para>
      <important>
	<title>Important - Virtual servers must have two NICs interfaces</title>
	<para>
          It's necessary for both virtual guest to have 2 network interfaces connected to
          the same virtual network otherwise the installation will fail.
        </para>
      </important>
      <para>
	I'm using the <systemitem>virbr0</systemitem> device which is the
        virtual bridge where <systemitem>vnet0</systemitem> is connected. This emulate
        switch where the virtual machines are connected with all their virtual network
        interfaces. In the following table you can find the details about network
        configuration of each virtual machine:
      </para>

      <table id="virtual_guests_network_configuration" frame="all">
        <title>Network Configuration of Virtual Guests</title>
        <tgroup align="left" cols="3" colsep="1" rowsep="1">
          <thead>
            <row>
              <entry></entry>
              <entry>centos6-glance</entry>
              <entry>centos6-splunk</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Network</entry>
              <entry><systemitem class="ipaddress">192.168.122.0</systemitem></entry>
              <entry><systemitem class="ipaddress">192.168.122.0</systemitem></entry>
            </row>
            <row>
              <entry>IP address</entry>
              <entry><systemitem class="ipaddress">192.168.122.200</systemitem></entry>
              <entry><systemitem class="ipaddress">192.168.122.205</systemitem></entry>
            </row>
            <row>
              <entry>Netmask</entry>
              <entry><systemitem class="ipaddress">255.255.255.0</systemitem></entry>
              <entry><systemitem class="ipaddress">255.255.255.0</systemitem></entry>
            </row>
            <row>
              <entry>Gateway</entry>
              <entry><systemitem class="ipaddress">192.168.122.1</systemitem></entry>
              <entry><systemitem class="ipaddress">192.168.122.1</systemitem></entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>
        Any special DNS configuration is not required.
      </para>

      <note>
        <title>Note</title>
        <para>
  	  The full hostnames of the virtual machines are:
          <literal>centos6-glance.example.com</literal> and
          <literal>centos6-splunk.example.com</literal>.
        </para>
      </note>

      <para>
	I configured both virtual guests with the following parameters:
      </para>

      <table id="virtual_guests_parameters" frame="all">
        <title>Virtual Guests Specifications</title>
        <tgroup align="left" cols="3" colsep="1" rowsep="1">
          <colspec colname="col1" colnum="1" colwidth="3*"></colspec>
          <colspec colname="col2" colnum="2" colwidth="2*"></colspec>
          <colspec colname="col3" colnum="3" colwidth="2*"></colspec>
          <thead>
            <row>
              <entry>Amount of RAM in the System</entry>
              <entry>Disk space</entry>
              <entry>Amount of CPUs</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>1GB of RAM</entry>
              <entry>8GB of disk space</entry>
              <entry>2 CPUs</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section id="s2-network_topology">
      <title>Network Topology</title>
      <para>
	You can find the network diagram below.
      </para>

      <figure float="0">
        <title>Network Topology</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="./images/network_topology.svg" format="SVG" width="450" />
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>
  <section id="s1-installation">
    <title>Installation</title>
    <para>
      As i mentioned before in the <xref
      linkend="s2-virtual_host_configuration"/> you need to configure your
      environment or use the defaults. You will also need to download the CentOS iso
      image.
    </para>

    <note>
      <title>Note - Use already preconfigured CentOS image</title>
      <para>
	I can recommend you to use preconfigured CentOS image, which can be
        downloaded on this URL:
        <ulink url="https://raw.github.com/ruzickap/splunk_glance/master/iso/CentOS-6.2-x86_64-netinstall-my.iso"/>
      </para>
    </note>

    <para>
      If you will use the customized CentOS iso, you don't need to specify
      manually the following kernel parameters and storing the kickstart files
      somewhere on the web:
    </para>

    <screen><userinput>ksdevice=eth0 ks=cdrom:/ks/centos62-glance ip=192.168.122.200 netmask=255.255.255.0 gateway=192.168.122.1</userinput></screen>

    <para>
      You will be able to select directly from the main menu what you want to install:
    </para>

    <figure float="0">
      <title>Menu from customized CentOS iso</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="./images/customized_centos_menu.png" format="PNG" width="400" />
        </imageobject>
      </mediaobject>
    </figure>

    <para>
      The files necessary to build the iso <filename>isolinux.cfg</filename>
      and <filename>create_iso</filename> are located in the same directory as the
      ISO file above.
    </para>

    <para>
      The installation will require the connection to the Internet, because
      some parts are downloaded directly from the github, EPEL and other
      destinations.
    </para>

    <section id="s2-splunk_virtual_guest_installation">
      <title>Splunk Virtual Guest Installation</title>

      <para>
        The installation of the Splunk Virtual Machine is done using the
        kickstart file
        <ulink
url="https://raw.github.com/ruzickap/splunk_glance/master/ks/centos62-glance"/>.
      </para>

      <section id="s3-splunk_installation_kickstart_section">
        <title>Splunk Guest Kickstart Installation</title>
        <para>
          First part of the kickstart file contains basic installation, which will
          configure first network interface <systemitem>eth0</systemitem> and download
          the rest of the system form the Czech CentOS mirror. It will automatically
          remove all partitions on the disk, configure timezone and disable SELinux and
          firewall.
        </para>

        <para>
  	The second part contains the installation of basic packages and setting
          the server defaults using <filename>ks_common_post.sh</filename>. This file is
          included in the main kickstart using <command>%include</command> and contains:
        </para>

        <itemizedlist>
          <listitem>
  	  <para>
              <guilabel>SSH public key configuration</guilabel> &mdash; to login to the machine without entering password.
            </para>
          </listitem>
          <listitem>
  	  <para>
              <guilabel>Network + Bonding configuration</guilabel>
            </para>
          </listitem>
          <listitem>
  	  <para>
              <guilabel>NTP configuration</guilabel> &mdash; to have the same time on all servers.
            </para>
          </listitem>
          <listitem>
  	  <para>
              <guilabel>Kdump configuration</guilabel> &mdash; used to generate vmcores, which can help to troubleshoot kernel issues.
            </para>
          </listitem>
          <listitem>
  	  <para>
  	    <guilabel>SNMP configuration</guilabel> &mdash; to get the data about
              cpu/memory/processes/traffic/disk IO, space from the machine out
              of the machine using the standard SNMP requests.
            </para>
          </listitem>
        </itemizedlist>
      </section>

      <section id="s3-splunk_installation">
        <title>Splunk Installation</title>

        <para>
  	  The rest of the Splunk installation is handled by
          <filename>splunk_installation.sh</filename> installation script which is also
          downloaded from the main repository. The kickstart file only contain
          the following path definitions:
        </para>

<screen><command>cat > /etc/profile.d/splunk.sh &lt;&lt; \EOF</command>
<command>export SPLUNK_HOME=/opt/splunk</command>
<command>export PATH=$SPLUNK_HOME/bin:$PATH</command>
<command>EOF</command></screen>

        <para>
	  <filename>splunk_installation.sh</filename> script downloads the
          splunk rpm package from the URL specified in <filename>SPLUNK_URL</filename>
          variable and install it. This package can not be stored in my repository,
          because it's proprietary package and needs to be downloaded manually from the
         <ulink url="http://www.splunk.com/download"/>.  It also creates startup
         scripts, enables SSL, set initial password to 'xxxx' and add 514 TCP port to
         Data inputs.
        </para>

<screen><command>sed -i.orig 's/^\(enableSplunkWebSSL\) = false/\1 = true/' /opt/splunk/etc/system/default/web.conf</command>
<command>/opt/splunk/bin/splunk start --accept-license</command>
<command>/opt/splunk/bin/splunk enable boot-start</command>
<command>PASSWORD="xxxx"</command>
<command>/opt/splunk/bin/splunk edit user admin -password $PASSWORD -role admin -auth admin:changeme</command>
<command>/opt/splunk/bin/splunk add tcp 514 -sourcetype syslog -auth admin:$PASSWORD</command></screen>

        <para>
          After this initial configuration Splunk will be ready to index all syslog messages which will come to the server.
        </para>
      </section>
    </section>

    <section id="s2-glance_virtual_guest_installation">
      <title>Glance Virtual Guest Installation</title>
      <para>
	The installation of Glance Virtual Guest is quite simmilar to the
        previous one. The <xref linkend="s3-splunk_installation_kickstart_section"/>
        applies also for Glnace Guest installation, because both kickstart files are
        sharing the same <filename>ks_common_post.sh</filename>.
      </para>
      <para>
	The only difference is - this kickstart also installs the EPEL (<ulink
        url="http://fedoraproject.org/wiki/EPEL"/>) repository and modifies the
        <package>rsyslog</package> to send the output to the remote IP using TCP:
      </para>
<screen><command>rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-5.noarch.rpm</command>
<command>echo "*.* @@192.168.122.205" >> /etc/rsyslog.conf</command></screen>
    </section>

    <section id="s2-glance_installation">
      <title>Glance Installation</title>
      <para>
        The <package>openstack-glance</package> is part of the EPEL repository. We can use the default package installation using <package>yum</package> to install it directly.
      </para>
      <screen><command>yum install openstack-glance python-argparse -y</command></screen>
      <para>
	The rest of the kickstart file is just updating the runlevels with
        glance startup scripts and modify it's configuration to log to rsyslog:
      </para>
<screen><command>chkconfig openstack-glance-api on</command>
<command>chkconfig openstack-glance-registry on</command>

<command>sed -i.orig 's/^use_syslog = False/use_syslog = True/' /etc/glance/glance-*.conf</command></screen>
    </section>
  </section>

  <section id="s1-tests">
    <title>Tests</title>
    <para>
      I decided to simulate most common glance operations to see the output
      of the logs. The logs should be the same when using the API or command line.
      (OpenStack is using the API). In the test I was using the following glance operations:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <guilabel>add</guilabel> &mdash; adds a new image to Glance.
        </para>
      </listitem>
      <listitem>
        <para>
          <guilabel>update</guilabel> &mdash; updates an image's metadata in Glance
        </para>
      </listitem>
      <listitem>
        <para>
          <guilabel>delete</guilabel> &mdash; deletes an image from Glance
        </para>
      </listitem>
      <listitem>
        <para>
          <guilabel>index</guilabel> &mdash; return brief information about images in Glance.
        </para>
      </listitem>
      <listitem>
        <para>
          <guilabel>details</guilabel> &mdash; return detailed information about images in Glance.
        </para>
      </listitem>
      <listitem>
        <para>
          <guilabel>show</guilabel> &mdash; show detailed information about an image in Glance.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      I wrote a short script located here: <ulink
      url="https://raw.github.com/ruzickap/splunk_glance/master/scripts/glance_log_tests.sh"/>
      to do all the tests mentioned above. It contains a simple loop with the
      operations mentioned above to generate all kind of logs.
    </para>
    <para>
      The main syslog messages are:
    </para>
<screen>Processing request: POST /v1/images
Processing request: GET /v1/images/detail
Processing request: HEAD /v1/images/1
Processing request: PUT /v1/images/1
Processing request: DELETE /v1/images/1</screen>
    <para>
      After running the script mentioned above you should be able to see these
      messages in splunk:
    </para>
<screen><command>splunk search 'sourcetype="syslog" host="centos6-glance" "Processing request:" | head 10'</command>
Mar 16 19:05:26 centos6-glance 2012-03-16 19:05:26 DEBUG
[glance.api.middleware.version_negotiation] Processing request: DELETE
/v1/images/20 Accept:
Mar 16 19:05:23 centos6-glance 2012-03-16 19:05:23 DEBUG [glance.api.middleware.version_negotiation] Processing request: GET /v1/images/20 Accept: */*
Mar 16 19:05:23 centos6-glance 2012-03-16 19:05:23 DEBUG
[glance.api.middleware.version_negotiation] Processing request: PUT
/v1/images/20 Accept:
Mar 16 19:05:22 centos6-glance 2012-03-16 19:05:22 DEBUG
[glance.api.middleware.version_negotiation] Processing request: PUT
/v1/images/20 Accept:
Mar 16 19:05:22 centos6-glance 2012-03-16 19:05:22 DEBUG
[glance.api.middleware.version_negotiation] Processing request: GET /v1/images
Accept:
Mar 16 19:05:22 centos6-glance 2012-03-16 19:05:22 DEBUG
[glance.api.middleware.version_negotiation] Processing request: GET /v1/images
Accept:
Mar 16 19:05:21 centos6-glance 2012-03-16 19:05:21 DEBUG
[glance.api.middleware.version_negotiation] Processing request: HEAD
/v1/images/20 Accept:
Mar 16 19:05:20 centos6-glance 2012-03-16 19:05:20 DEBUG
[glance.api.middleware.version_negotiation] Processing request: GET
/v1/images/detail Accept:
Mar 16 19:05:20 centos6-glance 2012-03-16 19:05:20 DEBUG
[glance.api.middleware.version_negotiation] Processing request: GET
/v1/images/detail Accept:
Mar 16 19:05:13 centos6-glance 2012-03-16 19:05:13 DEBUG [glance.api.middleware.version_negotiation] Processing request: POST /v1/images Accept:
</screen>
    <para>
      The web interface is located on the url <ulink
      url="https://192.168.122.205:8000"/>, where you can also see the same messages.
    </para>
  </section>

  <section id="s1-summary">
    <title>Summary</title>
    <para>
      I was working with Splunk for a short time, but I can imagine it's
      function as a central syslog server through which users can esaily look for
      information in prepared searches. It's reporting capabilities seems to be very
      handy and nice prepared AJAX-enabled web interface. It was also quite
      interesting to see the data changes in real time. The alerting functions looks
      promising and I shouldn't forget to mention the possibility to extend the
      main part with various "log reporting applications". The installation was
      very easy and configuration as well.
    </para>

    <para>
      On the other hand is the price, which is quite high for small companies.
      The licensing is based on indexed data per day, where price starts at
      $6000 for a 500 megabyte-per-day including support.
      The design of documentation should be improved, but it contains the
      important stuff.
      I'm sure there are few opensource software (like <ulink url="http://www.graylog2.org/">Graylog2</ulink>), which can be a
      good solution for the small companies as well as other commercial
      competitors like <ulink url="http://www.loglogic.com/">LogLogic</ulink>,
      <ulink url="http://www.logrhythm.com/">LogRhythm</ulink>, <ulink
      url="http://www.liquidlabs.com/">LogScape</ulink> and many others.
    </para>

    <para>
      There are many things which I haven't touched, but I just want to show
      basic capabilities of this powerful software. For the companies who are
      taking the log analysis seriously, this can be the right tool. The others
      can use some cheaper variants.
    </para>
  </section>
  <xi:include href="Revision_History.xml" xmlns:xi="http://www.w3.org/2001/XInclude" />
</article>
